version: '3'
services:
    db:
        image: mysql
        container_name: mysql
        platform: linux/x86_64
        volumes:
            - db-store:/var/lib/mysql
            - ./logs:/var/log/mysql
            - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
        environment:
            - MYSQL_DATABASE=${DB_NAME:-ecommerce}
            - MYSQL_USER=${DB_USER:-admin}
            - MYSQL_PASSWORD=${DB_PASS:-123}
            - MYSQL_ROOT_PASSWORD=${DB_PASS:-123}
        ports:
            - ${DB_PORT:-13306}:3306
    redis:
        container_name: redis
        image: redis
        ports:
            - ${REDIS_PORT:-6379}:6379
        volumes:
            - ./data:/data:rw

    zookeeper:
        image: wurstmeister/zookeeper:latest
        container_name: zookeeper
        ports:
            - 2181:2181
        volumes:
            - ./_data/zookeeper/data:/data

    kafka:
        image: wurstmeister/kafka:2.12-2.5.0
        hostname: kafka
        container_name: kafka
        #container_name: kafka
        ports:
            - 9092:9092
        environment:
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_LISTENERS: LISTENER_DOCKER_INTERNAL://:19092,LISTENER_DOCKER_EXTERNAL://:9092
            KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://127.0.0.1:9092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
            KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_BROKER_ID: 1
            KAFKA_CREATE_TOPICS: __consumer_offsets:50:1,user.create:1:1
            KAFKA_NUM_PARTITIONS: 3
        volumes:
            - ./_data/kafka/data:/var/lib/kafka/data
        depends_on:
            - zookeeper
        healthcheck:
            test: ['CMD', 'kafka-topics.sh', '--list', '--zookeeper', 'zookeeper:2181']
            interval: 5s
            timeout: 10s
            retries: 5
    kafka-ui:
        image: provectuslabs/kafka-ui:latest
        container_name: kafka-ui
        ports:
            - 8888:8080
        environment:
            KAFKA_CLUSTERS_0_NAME: local
            KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:19092
        depends_on:
            - kafka

volumes:
    db-store:
        driver: local
    # redis-data:
    #     driver: local
    # esdata:
    #     driver: local